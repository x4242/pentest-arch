#!/usr/bin/env bash

# Description:
# ------------
# Basic config and installation of newly installed Arch.
#
# lastmod: 2019-09-08T11:18:59+02:00
# Change History:
# ---------------
# - 2019-09-08: added pacman/yay db sync prior to install
# - 2019-08-07: added arrot output if installation of package failed
# - 2019-07-28: moved intial parts to new script and renemaed to basic
# - 2019-07-26:
#   - added macchanger
#   - added random hostname part
# - 2019-07-25: added grc + placeholder for random hostname script
# - 2019-07-23:
#   - added diffrent package groups
#   - added mirrorlist ranking
# - 2019-07-22: created

# String definitions for colored printf output
# [ ERROR ] in light red
# [ INFO  ] in light green
# [ INPUT ] in light yellow
STR_ERROR="[ \e[91mERROR\e[0m ]"
STR_INFO="[ \e[92mINFO\e[0m  ]"
STR_INPUT="[ \e[93mINPUT\e[0m ]"

##########################################
# Check if root / sudo
##########################################
if [ "$EUID" -eq 0 ]; then
  printf "%b Do not run with sudo / as root.\n" "${STR_ERROR}" >&2
  exit 1
fi

# sync package db
sudo pacman -Sy

##########################################
# Install yay from AUR
##########################################
printf "%b Installing yay...\n" "${STR_INFO}"
git clone https://aur.archlinux.org/yay.git /tmp/yay
if cd /tmp/yay; then
  makepkg -si
else
  printf "%b Could not cd into /tmp/yay.\n" "${STR_ERROR}" >&2
  exit 1
fi
rm -rf /tmp/yay
printf "%b Done installing yay.\n" "${STR_INFO}"

yay -Sy


##########################################
# Desktop environment
##########################################
pacman_desktop_pkgs=(
                    firefox
                    lightdm
                    lightdm-gtk-greeter
                    mousepad
                    noto-fonts
                    ristretto
                    thunar-archive-plugin
                    ttf-bitstream-vera
                    ttf-croscore
                    ttf-dejavu
                    ttf-droid
                    ttf-liberation
                    ttf-roboto
                    xfce4
                    xfce4-datetime-plugin
                    xfce4-mount-plugin
                    xfce4-whiskermenu-plugin
                    xorg
                    xorg-fonts
                    )

sudo localectl set-x11-keymap de
sudo systemctl enable lightdm.service

for package in ${pacman_desktop_pkgs[*]}; do
  pacman -S --needed --noconfirm ${package}
  if [ $? -ne 0 ]; then
    printf "%b Installation of package '%b' failed.\n" "${STR_ERROR}" "${package}" >&2
  fi
done

aur_desktop_pkgs=(
                  papirus-icon-theme-git
                  ttf-ms-win10
                  ttf-courier-prime
                  )

for package in ${aur_desktop_pkgs[*]}; do
  yay -S --noconfirm ${package}
  if [ $? -ne 0 ]; then
    printf "%b Installation of package '%b' failed.\n" "${STR_ERROR}" "${package}" >&2
  fi
done


##########################################
# QEMU/KVM Guest Config
##########################################
printf "%b Configure system as QEMU/KVM guest (y/n)? " "${STR_INPUT}"
read -r yes_no
case $yes_no in
  [Yy]* )
    pacman -S --noconfirm xf86-video-qxl
    pacman -S --noconfirm qemu-guest-agent
    systemctl enable qemu-ga.service
    pacman -S --noconfirm spice-vdagent
    echo "bochs_drm" > /ect/modules-load.de/bochs-drm.conf
    echo "qxl" > /ect/modules-load.de/qxl.conf
    echo -e 'Section "Device"\n\tIdentifier "qxl"\n\tDriver "qxl"\n\tOption "ENABLE_SURFACES" "False"\nEndSection\n' > /etc/X11/xorg.conf.d/qxl.conf
    ;;
  *)
    printf "%b Skipping configuration as QEMU/KVM guest.\n" "${STR_INFO}"
    ;;
esac

printf "%b To use the desktop environment reboot system or start it manually.\n" "${STR_INFO}"
exit 0
